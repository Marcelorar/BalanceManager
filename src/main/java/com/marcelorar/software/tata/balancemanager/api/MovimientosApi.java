/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.marcelorar.software.tata.balancemanager.api;

import com.marcelorar.software.tata.balancemanager.model.GetAllTransactions200ResponseInner;
import com.marcelorar.software.tata.balancemanager.model.Transaction;
import com.marcelorar.software.tata.balancemanager.model.TransactionPOST;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-06-28T04:00:16.868948600-05:00[America/Guayaquil]", comments = "Generator version: 7.6.0")
@Validated
@Tag(name = "Transaction", description = "Operations related to transactions committed to Accounts.")
public interface MovimientosApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /movimientos : Create a Transaction.
     * Create a Transaction.
     *
     * @param transactionPOST Transaction information. (optional)
     * @return successful operation (status code 201)
     *         or Balance out of bounds (status code 403)
     */
    @Operation(
        operationId = "createTransaction",
        summary = "Create a Transaction.",
        description = "Create a Transaction.",
        tags = { "Transaction" },
        responses = {
            @ApiResponse(responseCode = "201", description = "successful operation", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Transaction.class))
            }),
            @ApiResponse(responseCode = "403", description = "Balance out of bounds", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = String.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/movimientos",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Transaction> createTransaction(
        @Parameter(name = "TransactionPOST", description = "Transaction information.") @Valid @RequestBody(required = false) TransactionPOST transactionPOST
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"date\" : \"2024-06-13T19:19:56Z\", \"amount\" : \"100.23\", \"currentBalance\" : \"100.23\", \"id\" : \"9151b21f-43be-43b4-9bf3-f4bf67cdf544\", \"type\" : \"DEBIT\", \"account\" : \"200012\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /movimientos : Get all Transactions.
     * Get all Transactions.
     *
     * @param pgSize The amount of transactions per page. (required)
     * @param pg The page for the bulk of transactions. (required)
     * @return Query Successfully Executed (status code 200)
     */
    @Operation(
        operationId = "getAllTransactions",
        summary = "Get all Transactions.",
        description = "Get all Transactions.",
        tags = { "Transaction" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Query Successfully Executed", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = GetAllTransactions200ResponseInner.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/movimientos",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<GetAllTransactions200ResponseInner>> getAllTransactions(
        @NotNull @Parameter(name = "pgSize", description = "The amount of transactions per page.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "pgSize", required = true) Integer pgSize,
        @NotNull @Parameter(name = "pg", description = "The page for the bulk of transactions.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "pg", required = true) Integer pg
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"date\" : \"2024-06-13T19:19:56Z\", \"amount\" : \"100.23\", \"currentBalance\" : \"100.23\", \"id\" : \"9151b21f-43be-43b4-9bf3-f4bf67cdf544\", \"type\" : \"DEBIT\", \"account\" : \"200012\" }, { \"date\" : \"2024-06-13T19:19:56Z\", \"amount\" : \"100.23\", \"currentBalance\" : \"100.23\", \"id\" : \"9151b21f-43be-43b4-9bf3-f4bf67cdf544\", \"type\" : \"DEBIT\", \"account\" : \"200012\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
